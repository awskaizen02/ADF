use JLY30

select * from STUDENT

--rename a column
--syntax: exec sp_rename 'schema.tablename.oldcolumnname', 'newcolumnname', 'column'

EXEC SP_RENAME 'DBO.STUDENT.S_NAME', 'FIRSTNAME', 'COLUMN'

--CREATE A TABLE FROM OTHER TABLE
--SYNTAX: SELECT * INTO <NEW_TABLENAME> FROM <LD_TABLE_NAE>

SELECT * INTO STD1 FROM STUDENT

SELECT * FROM STD1

--CREATE A TABLE FROM OTHER TABLE WIHOUT COPYING ANY DATA
--SYNTAX: - SELECT * INTO <NEW_TABLE_NAME> FROM <SOURDE_TABLE_NAME> WHERE 1 = 2

SELECT * INTO STD2 FROM STUDENT WHERE 1 = 2

SELECT * FROM STD2

SELECT * INTO STD3 FROM STD1

--TRUNCATE --REMOVING ALL ROW VALUES WITHOUT DELETEING THE SCHEMA/METADATA
--SYNTAX: TRUNCATE TABLE <TABLE_NAME>

SELECT * FROM STD1

TRUNCATE TABLE STD1

--DROP THE TABLE -- REMOVING DATA AS WELL AS SCHEMA
--SYNATX: DROP TABLE <TABLENAME>

SELECT * FROM STD3

DROP TABLE STD3

--DIFF B/W TRUNCATE AND DROP
-- TRUNCATE WILL DELETE THE DATA BUT WILL RETAIN THE SCHEMA
-- DROP WILL DELETE BOTH SCHEMA AS WELL AS DATA

--DROP A DATABASE
--SYNTAX: DROP DATABASE <DATABASE_NAME>
CREATE DATABASE J31

DROP DATABASE J31

------------------------------------
--DML -- DATA MANUPLATION LANGUAGE
-- INSERT, DELETE, UPDATE

CREATE TABLE EMP (ID INT, NAME VARCHAR(30), SALARY INT, CITY VARCHAR(30))

INSERT INTO EMP VALUES 
(101, 'RAM', 50000 , 'CHENNAI'),
(102, 'RAM', 50000 , 'CHENNAI'),
(103, 'RAM', 50000 , 'CHENNAI'),
(104, 'RAM', 50000 , 'CHENNAI')

INSERT INTO EMP  VALUES ('RAM', 50000 , 'CHENNAI',105)

-- NUERIC VALUES ARE ACCEPTED IN VARCHAR COL, 
-- BUT ALPHANUMERIC/ALPHA ARE NOT ACEPTED IN INTEGER

INSERT INTO EMP  VALUES (106,'1234568', 50000 , 'CHENNAI')

INSERT INTO EMP (NAME, SALARY, CITY, ID) VALUES ('RAM', 50000 , 'CHENNAI',105)

SELECT * FROM EMP


INSERT INTO EMP VALUES 
(111, 'RAM', 5000 , 'CHENNAI'),
(110, 'RAM', 15000 , 'CHENNAI'),
(109, 'RAM', 20000 , 'CHENNAI'),
(108, 'RAM', 80000 , 'CHENNAI')


--INSERT THE VALUES FROM OTHER TABLE
SELECT * FROM EMP
SELECT * FROM EMP1

SELECT * INTO EMP1 FROM EMP WHERE 1 = 2

--INSERT ONLY ROWS WHERE SALARY IS LESS THAN 45K

INSERT INTO EMP1
SELECT * FROM EMP WHERE SALARY <= 45000


--INSERT SPECIFIC CLUMNS FROM OTHER TABLE
SELECT * FROM EMP1
SELECT * FROM EMP2

CREATE TABLE EMP2 (ID INT , NAME VARCHAR(30))

INSERT INTO EMP2 
SELECT * FROM EMP1

--MENTION THE SCHEMA NAME MANDATORILY WHEN INSERTING PARTICUAL COLUMN VALUES
INSERT INTO EMP2
SELECT ID, NAME FROM EMP1

--UPDATE ROW VALUES
--SYNATX: UPDATE TABLE <TABLE_NAME> SET <COL_TO_UPDATE> = <NEW_COL_VALUE> WHERE CONDITION

SELECT * FROM EMP

UPDATE EMP SET SALARY = 90000 WHERE ID = 101

--UPDATE TO ALL ROWS
UPDATE EMP SET CITY = 'MADURAI'

--UPDATE MULTIPLE COLS
--UPDATE SALARY TO 65K  AND CITY TO CHENNAI WHEN ID IS 102

UPDATE EMP SET SALARY = 65000 , CITY = 'CHENNAI' WHERE ID = 102

SELECT * FROM EMP


--UPDATE DIFFERENT VALUES TO ROWS BASED ON DIFFERENT CONDITION
--SALARY SHOULD BE 70K WHEN ID IS 103 AND SALARY SHOULD BE 79K WHEN ID IS 104

UPDATE EMP
SET SALARY = CASE
    WHEN ID = 103 THEN 70000
	WHEN ID = 104 THEN 79000
	ELSE SALARY
END

SELECT * FROM EMP

--DELETE THE ROW VALUES
--DELETE FROM <TABLENAME> WHERE CONDITION

DELETE FROM EMP WHERE ID = 106

SELECT * FROM EMP

--DIFFERENCE B/W TRUNCATE, DELETE AND DROP
--TRUNCATE IS USED WHEN NEED TO DELETE ALL THE ROWS BUT RETAIN THE SCHEMA
--DROP IS USED TO DELETE BOTH DATA AS WELL AS SCHEMA
--DELETE IS USED TO DELETE THE SPECIFIC ROWS BASED ON CONDITION